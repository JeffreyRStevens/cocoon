@manual{Aust.Barth.2023,
  type = {manual},
  title = {{{papaja}}: {{Prepare}} reproducible {{APA}} journal articles with {{R Markdown}}},
  author = {Aust, Frederik and Barth, Marius},
  year = {2023}
}

@manual{Gromer.2023,
  type = {manual},
  title = {apa: {{Format}} outputs of statistical tests according to {{APA}} guidelines},
  author = {Gromer, Daniel},
  year = {2023}
}

@book{Knuth.1992,
  title = {Literate {{Programming}}},
  author = {Knuth, Donald E.},
  year = {1992},
  month = mar,
  publisher = {Cambridge University Press},
  abstract = {Literate programming is a programming methodology that combines a programming language with a documentation language, making programs more robust, more portable, and more easily maintained than programs written only in a high-level language. Computer programmers already know both kinds of languages; they need only learn a few conventions about alternating between languages to create programs that are works of literature. A literate programmer is an essayist who writes programs for humans to understand, instead of primarily writing instructions for machines to follow. When programs are written in the recommended style they can be transformed into documents by a document compiler and into efficient code by an algebraic compiler. This anthology of essays from the inventor of literate programming includes Knuth's early papers on related topics such as structured programming, as well as the Computer Journal article that launched literate programming itself.},
  googlebooks = {fqPIPgAACAAJ},
  isbn = {978-0-937073-80-3},
  langid = {english},
  keywords = {Computers / Social Aspects}
}

@article{Ludecke.etal.2019,
  title = {{{insight}}: a unified interface to access information from model objects in {{R}}},
  author = {L{\"u}decke, Daniel and Waggoner, Philip and Makowski, Dominique},
  year = {2019},
  journal = {Journal of Open Source Software},
  volume = {4},
  number = {38},
  pages = {1412},
  doi = {10.21105/joss.01412}
}

@article{Makowski.etal.2020,
  title = {Methods and algorithms for correlation analysis in {{R}}},
  author = {Makowski, Dominique and {Ben-Shachar}, Mattan S. and Patil, Indrajeet and L{\"u}decke, Daniel},
  year = {2020},
  journal = {Journal of Open Source Software},
  volume = {5},
  number = {51},
  pages = {2306},
  doi = {10.21105/joss.02306}
}

@misc{Makowski.etal.2022,
  title = {{{correlation}}: {{Methods}} for correlation analysis},
  shorttitle = {{{correlation}}},
  author = {Makowski, Dominique and Wiernik, Brenton M. and Patil, Indrajeet and L{\"u}decke, Daniel and {Ben-Shachar}, Mattan S.},
  year = {2022},
  month = oct
}

@article{Marwick.etal.2018a,
  title = {Packaging data analytical work reproducibly using {{R}} (and friends)},
  author = {Marwick, Ben and Boettiger, Carl and Mullen, Lincoln},
  year = {2018},
  month = jan,
  journal = {The American Statistician},
  volume = {72},
  number = {1},
  pages = {80--88},
  publisher = {Taylor \& Francis},
  issn = {0003-1305},
  doi = {10.1080/00031305.2017.1375986},
  urldate = {2021-12-30},
  abstract = {Computers are a central tool in the research process, enabling complex and large-scale data analysis. As computer-based research has increased in complexity, so have the challenges of ensuring that this research is reproducible. To address this challenge, we review the concept of the research compendium as a solution for providing a standard and easily recognizable way for organizing the digital materials of a research project to enable other researchers to inspect, reproduce, and extend the research. We investigate how the structure and tooling of software packages of the R programming language are being used to produce research compendia in a variety of disciplines. We also describe how software engineering tools and services are being used by researchers to streamline working with research compendia. Using real-world examples, we show how researchers can improve the reproducibility of their work using research compendia based on R packages and related tools.},
  keywords = {Computational science,Data science,Open source software,Reproducible research},
  file = {/home/jstevens/zotero-library/Marwick et al/marwick_et_al_2018_packaging_data_analytical_work_reproducibly_using_r_(and_friends)2.pdf}
}

@manual{Morey.Rouder.2024,
  type = {manual},
  title = {{{BayesFactor}}: {{Computation}} of bayes factors for common designs},
  author = {Morey, Richard D. and Rouder, Jeffrey N.},
  year = {2024}
}

@book{Stodden.etal.2018,
  title = {Implementing reproducible research},
  editor = {Stodden, Victoria and Leisch, Friedrich and Peng, Roger D.},
  year = {2018},
  month = dec,
  publisher = {{Chapman and Hall/CRC}},
  address = {New York},
  doi = {10.1201/9781315373461},
  abstract = {In computational science, reproducibility requires that researchers make code and data available to others so that the data can be analyzed in a similar manner as in the original publication. Code must be available to be distributed, data must be accessible in a readable format, and a platform must be available for widely distributing the data and code. In addition, both data and code need to be licensed permissively enough so that others can reproduce the work without a substantial legal burden. Implementing Reproducible Research covers many of the elements necessary for conducting and distributing reproducible research. It explains how to accurately reproduce a scientific result.  Divided into three parts, the book discusses the tools, practices, and dissemination platforms for ensuring reproducibility in computational science. It describes: Computational tools, such as Sweave, knitr, VisTrails, Sumatra, CDE, and the Declaratron system Open source practices, good programming practices, trends in open science, and the role of cloud computing in reproducible research Software and methodological platforms, including open source software packages, RunMyCode platform, and open access journals Each part presents contributions from leaders who have developed software and other products that have advanced the field. Supplementary material is available at www.ImplementingRR.org.},
  isbn = {978-1-315-37346-1},
  file = {/home/jstevens/zotero-library/Stodden et al/stodden_et_al_2018_implementing_reproducible_research.pdf;/home/jstevens/zotero-library/Stodden et al/stodden_et_al_2018_implementing_reproducible_research2.pdf}
}

@incollection{Xie.2014,
  title = {knitr: {{A Comprehensive Tool}} for {{Reproducible Research}} in {{R}}},
  booktitle = {Implementing {{Reproducible Research}}},
  author = {Xie, Yihui},
  editor = {Stodden, V and Leisch, F and Peng, R D},
  year = {2014},
  pages = {3--32},
  publisher = {CRC Press},
  address = {Boca Raton, FL},
  file = {/home/jstevens/zotero-library/Xie/xie_2014_knitr_-_a_comprehensive_tool_for_reproducible_research_in_r.pdf}
}

@book{Xie.2015,
  title = {Dynamic {{Documents}} with {{R}} and knitr},
  author = {Xie, Yihui},
  year = {2015},
  month = jun,
  edition = {2nd},
  publisher = {CRC Press},
  address = {Boca Raton, FL},
  urldate = {2017-06-28},
  abstract = {Quickly and Easily Write Dynamic Documents Suitable for both beginners and advanced users, Dynamic Documents with R and knitr, Second Edition makes writing statistical reports easier by integrating computing directly with reporting. Reports range from homework, projects, exams, books, blogs, and web}
}
