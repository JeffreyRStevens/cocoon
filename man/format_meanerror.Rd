% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format_stats.R
\name{format_meanerror}
\alias{format_meanerror}
\alias{format_mean}
\alias{format_meanci}
\alias{format_meanse}
\alias{format_meansd}
\title{Calculate and format mean and error}
\usage{
format_meanerror(
  x = NULL,
  error = "ci",
  values = NULL,
  digits = 1,
  meanlabel = "abbr",
  italics = TRUE,
  subscript = NULL,
  units = NULL,
  display = "limits",
  cilevel = 0.95,
  errorlabel = TRUE,
  type = "md"
)

format_mean(
  x = NULL,
  values = NULL,
  digits = 2,
  meanlabel = "abbr",
  italics = TRUE,
  subscript = NULL,
  units = NULL,
  display = "none",
  type = "md"
)

format_meanci(
  x = NULL,
  error = "ci",
  values = NULL,
  digits = 2,
  meanlabel = "abbr",
  italics = TRUE,
  subscript = NULL,
  units = NULL,
  display = "limits",
  cilevel = 0.95,
  errorlabel = TRUE,
  type = "md"
)

format_meanse(
  x = NULL,
  error = "se",
  values = NULL,
  digits = 2,
  meanlabel = "abbr",
  italics = TRUE,
  subscript = NULL,
  units = NULL,
  display = "par",
  errorlabel = TRUE,
  type = "md"
)

format_meansd(
  x = NULL,
  error = "sd",
  values = NULL,
  digits = 2,
  meanlabel = "abbr",
  italics = TRUE,
  subscript = NULL,
  units = NULL,
  display = "par",
  errorlabel = TRUE,
  type = "md"
)
}
\arguments{
\item{x}{Numeric vector of data to calculate mean and error}

\item{error}{Character vector specifying error type ("ci" = confidence
interval, "se" = standard error of the mean, "sd" = standard deviation)}

\item{values}{Numeric vector of mean and interval or mean and lower and upper
limits}

\item{digits}{Number of digits after the decimal for means and error}

\item{meanlabel}{Formatting for mean label ("abbr" = M, "word" = Mean,
"none" = no label)}

\item{italics}{Logical for whether mean label should be italicized}

\item{subscript}{Character string to include as subscript with mean label}

\item{units}{Character string that gives units to include after mean value}

\item{display}{Character vector specifying how to display error ("limits" =
[lower limit, upper limit], "pm" = Â±interval, "par" = (interval), "none" =
do not display error)}

\item{cilevel}{Numeric scalar from 0-1 defining confidence level
(defaults to 0.95)}

\item{errorlabel}{Logical for whether error label (e.g., 95\% CI) should be
included}

\item{type}{Type of formatting ("md" = markdown, "latex" = LaTeX)}
}
\value{
A character string of mean and error formatted in Markdown or LaTeX.
To return only the mean (no error), set \code{display = "none"}.
}
\description{
\code{format_meanerror()} is a general function that allows you to either
automatically calculate mean and a measure of error from a data vector or
specify already calculated means and either an error interval or error
limits. Error measures include confidence intervals, standard deviation,
and standard error of the mean. Each of those has a specific function that
formats means and those error measures using APA (7th edition) style. So
\code{format_meanci()}, \code{format_meansd()}, and \code{format_meanse()} are wrappers
around \code{format_meanerror()} for specific error measures with a default
style. To just format the mean with no error, use \code{format_mean()}, another
wrapper around \code{format_meanerror()} that drops the error measure.
}
\examples{
# Print mean and 95\% confidence limits for fuel efficiency
format_meanci(mtcars$mpg)
# Print mean and standard deviation
format_meansd(mtcars$mpg)
# Print mean and standard error of the mean
format_meanse(mtcars$mpg)
# Print mean
format_mean(mtcars$mpg)
# Print mean and 95\% confidence limits with no label for "95\% CI"
format_meanci(mtcars$mpg, errorlabel = FALSE)
# Print mean and standard error of the mean as plus/minus interval
format_meanse(mtcars$mpg, error = "se", display = "pm")
# Print mean and 90\% confidence limits with units
format_meanci(mtcars$mpg, units = "cm", cilevel = 0.9)
# Print three-digit mean with subscript in LaTeX
format_meanerror(mtcars$mpg, digits = 3, subscript = "control", display = "none", type = "latex")
}
